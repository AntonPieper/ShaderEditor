plugins {
	alias(libs.plugins.androidApplication)
}

android {
	namespace 'de.markusfisch.android.shadereditor'
	compileSdk sdk_version

	defaultConfig {
		minSdkVersion 14
		targetSdkVersion sdk_version

		versionCode 74
		versionName '2.29.0'
		externalNativeBuild {
			cmake {
				cppFlags ''
			}
		}
	}

	signingConfigs {
		release {
			keyAlias System.getenv('ANDROID_KEY_ALIAS')
			keyPassword System.getenv('ANDROID_KEY_PASSWORD')
			storePassword System.getenv('ANDROID_STORE_PASSWORD')
			def filePath = System.getenv('ANDROID_KEYFILE')
			storeFile filePath ? file(filePath) : null
		}
	}

	buildFeatures {
		buildConfig true
	}

	buildTypes {
		debug {
			applicationIdSuffix '.debug'
		}

		release {
			minifyEnabled true
			shrinkResources true
			signingConfig signingConfigs.release
		}
	}
	externalNativeBuild {
		cmake {
			path file('src/main/cpp/CMakeLists.txt')
			version '3.22.1'
		}
	}
}

tasks.register('generateTokenTypes') {
	doLast {
		def javaFile = file('src/main/java/de/markusfisch/android/shadereditor/highlighter/TokenType.java')
		def cFile = file('src/main/cpp/token_type.h')
		def javaEnum = (javaFile.getText() =~ (/(?s)enum TokenType \{(.*?)\}/))[0][1]
		def tokenTypes = (javaEnum =~ (/(?m)^\s*([a-zA-Z_][a-zA-Z_0-9]*),?/)).collect { it[1] }
		def cEnum = """
#ifndef SHADEREDITOR_APP_SRC_MAIN_CPP_LEXER_C_TOKEN_TYPE_H_
#define SHADEREDITOR_APP_SRC_MAIN_CPP_LEXER_C_TOKEN_TYPE_H_
typedef enum __attribute__((__packed__)) TokenType {
""".stripIndent()
		cEnum += tokenTypes.collect { "  $it,\n" }.join()
		cEnum += "} TokenType;\n"
		cEnum += "#define TOKEN_TYPE_COUNT ${tokenTypes.size()}\n"
		cEnum += "#ifdef DEBUG\n"
		cEnum += "const char *TOKEN_DEBUG[TOKEN_TYPE_COUNT] = {\n"
		cEnum += tokenTypes.collect { "  [$it] = \"$it\",\n"}.join()
		cEnum += "};\n#endif"
		cEnum += "\n#endif  // SHADEREDITOR_APP_SRC_MAIN_CPP_LEXER_C_TOKEN_TYPE_H_\n"
		cFile.write(cEnum)
	}
}

tasks.configureEach {
	if (it.name.contains("CMake")) {
		it.dependsOn("generateTokenTypes")
	}
}
dependencies {
	implementation libs.androidx.appcompat
	implementation libs.material
	implementation libs.androidx.preference
	implementation libs.androidx.legacy.preference.v14
}
